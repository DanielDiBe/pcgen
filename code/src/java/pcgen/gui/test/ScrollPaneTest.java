/*
 * ScrollPaneTest.java
 *
 * Created on July 10, 2008, 9:37 PM
 */
package pcgen.gui.test;

import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.AbstractCellEditor;
import javax.swing.JRadioButton;
import javax.swing.JTable;
import javax.swing.JViewport;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import pcgen.gui.util.SimpleTextIcon;

/**
 *
 * @author  Connor Petty <cpmeister@users.sourceforge.net>
 */
public class ScrollPaneTest extends javax.swing.JFrame
{

    /** Creates new form ScrollPaneTest */
    public ScrollPaneTest()
    {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox1 = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jCheckBox1.setText("jCheckBox1");
        jCheckBox1.setIcon(new SimpleTextIcon(jCheckBox1, "Icon"));
        jCheckBox1.setSelectedIcon(new SimpleTextIcon(jCheckBox1, "Sel"));
        getContentPane().add(jCheckBox1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public JViewport getRowHeader()
    {
        JViewport port = new JViewport();

        JTable table = new JTable();
        table.setAutoCreateColumnsFromModel(false);
        table.setModel(new RadioTableModel(4));
        table.setFocusable(false);
        //table.setDefaultEditor(Boolean.class, );
        //table.setDefaultRenderer(Boolean.class, );
        //table.setSelectionModel(jTable1.getSelectionModel());
        table.setPreferredScrollableViewportSize(new Dimension(20, 400));
        TableColumn column = new TableColumn(-1, 20, new RadioButtonRenderer(),
                                             new TableCellRadioButtonEditor());
        column.setHeaderValue("tate");
        table.addColumn(column);
        port.setView(table);
        return port;
    }

    private static class RadioTableModel extends DefaultTableModel
    {

        private int selectedRow = -1;

        public RadioTableModel(int rows)
        {
            super(rows, 1);
        }

        @Override
        public Object getValueAt(int row, int column)
        {
            if (column < 0)
            {
                return super.getValueAt(row, 0);
            }
            return super.getValueAt(row, column);
        }

        @Override
        public void setValueAt(Object aValue, int row, int column)
        {
            if (selectedRow != -1)
            {
                super.setValueAt(null, selectedRow, column);
            }
            selectedRow = row;
            super.setValueAt(aValue, row, column);
        }

    }

    private static class TableCellRadioButtonEditor extends AbstractCellEditor implements ActionListener,
                                                                                            TableCellEditor
    {

        private JRadioButton button;

        public TableCellRadioButtonEditor()
        {
            this.button = new JRadioButton();
            button.setHorizontalAlignment(JRadioButton.CENTER);
            button.addActionListener(this);
        }

        public Object getCellEditorValue()
        {
            return Boolean.valueOf(button.isSelected());
        }

        public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected,
                                                      int row, int column)
        {
            boolean selected = false;
            if (value instanceof Boolean)
            {
                selected = ((Boolean) value).booleanValue();
            }
            else if (value instanceof String)
            {
                selected = value.equals("true");
            }
            button.setSelected(selected);
            return button;
        }

        public void actionPerformed(ActionEvent e)
        {
            stopCellEditing();
        }

    }

    private static class RadioButtonRenderer extends JRadioButton
            implements TableCellRenderer
    {

        private static final DefaultTableCellRenderer defaultRenderer = new DefaultTableCellRenderer();
        
        public RadioButtonRenderer()
        {
            setHorizontalAlignment(JRadioButton.CENTER);
            setBorderPainted(true);
        }

        public Component getTableCellRendererComponent(JTable table,
                                                        Object value,
                                                        boolean isSelected,
                                                        boolean hasFocus,
                                                        int row,
                                                        int column)
        {
            defaultRenderer.getTableCellRendererComponent(table, value, isSelected, hasFocus,
                                                                  row, column);
            setForeground(defaultRenderer.getForeground());
            setBackground(defaultRenderer.getBackground());
            setBorder(defaultRenderer.getBorder());
            
            setSelected((value != null && ((Boolean) value).booleanValue()));
            return this;
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        java.awt.EventQueue.invokeLater(new Runnable()
                                {

                                    public void run()
                                    {
                                        new ScrollPaneTest().setVisible(true);
                                    }

                                });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox jCheckBox1;
    // End of variables declaration//GEN-END:variables
}
